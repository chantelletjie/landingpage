{"version":3,"sources":["Styling/myself.jpg","Content.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","id","className","src","myself","alt","Contact","method","data-email","action","htmlFor","name","aria-describedby","type","value","href","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yGAAAA,EAAOC,QAAU,IAA0B,oC,iKC6B5BC,EAxBA,WACb,OAEG,yBAAKC,GAAG,UAAUC,UAAU,oBAC3B,wBAAIA,UAAU,uBAAd,YACA,yBAAKA,UAAU,kCACb,yBAAKC,IAAKC,IAAQC,IAAI,OAAOH,UAAU,qBACrC,6BAASA,UAAU,iBACjB,uBAAGA,UAAU,kBAAb,0NAII,uBAAGA,UAAU,kBAAb,gQC+BDI,EA5CA,WACb,OACE,yBAAKL,GAAG,UAAUC,UAAU,YAC1B,wBAAIA,UAAU,uBAAd,WACE,0BAAMA,UAAU,mCAAmCK,OAAO,OAAOC,aAAW,oBAC5EC,OAAO,mGACL,6BACE,2BAAOC,QAAQ,UAAUR,UAAU,aAAnC,YACA,8BAAUD,GAAG,UAAUU,KAAK,UAAUT,UAAU,qEAAqEU,mBAAiB,kBAExI,yBAAKV,UAAU,OACb,2BAAOA,UAAU,oBAAoBQ,QAAQ,iBAA7C,iBACA,2BAAOR,UAAU,oDAAoDW,KAAK,QAAQF,KAAK,gBAAiBV,GAAG,kBAE3G,yBAAKC,UAAU,oBAEb,uFAGA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,iEAAiEW,KAAK,SAASC,MAAM,YAKhH,yBAAKZ,UAAU,oBAEf,uBAAGa,KAAK,oCACN,yBAAKZ,IAAI,sDAAsDE,IAAI,eAAeH,UAAU,UAG9F,uBAAGa,KAAK,oCACN,yBAAKZ,IAAI,6CAA6CE,IAAI,cAAcH,UAAU,aCtB3Ec,EAVD,WACV,OAEI,4BAAQd,UAAU,OACd,2BAAOA,UAAU,YAAjB,aAAmC,gEAAnC,2BC2BGe,MA3Bf,WACE,OAEE,6BAEA,yBAAKhB,GAAG,OAAOC,UAAU,4BAEvB,yBAAKA,UAAU,eACd,uBAAGa,KAAK,SAAR,IAAiB,wBAAIb,UAAU,QAAd,UACjB,uBAAGa,KAAK,YAAR,IAAoB,wBAAIb,UAAU,QAAd,WACpB,uBAAGa,KAAK,YAAR,IAAoB,wBAAIb,UAAU,QAAd,cAGrB,yBAAKA,UAAU,yCACb,qDAIJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QChBgBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACT,kBAAC,EAAD,MAEAC,SAASC,eAAe,SD0HlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a81bce17.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myself.a26ab882.jpg\";","import React from 'react';\r\nimport './App.css';\r\nimport 'tachyons';\r\nimport myself from './Styling/myself.jpg';\r\n\r\nconst Content =() => {\r\n  return (\r\n    \r\n     <div id=\"Content\" className=\"Content parallax\">\r\n      <h1 className=\"content-heading1 f1\">About Me</h1>\r\n      <div className=\"dt mw9 center pv4 pv5-m pv6-ns\">\r\n        <img src={myself} alt=\"self\" className=\"br-100 h5 w5 dib\" />\r\n          <article className=\"dtc v-mid pl3\">\r\n            <p className=\"lh-copy mw7 f4\">I am a Frontend Web Developer, with a particular flair for HTML and CSS. Reactjs \r\n                is a new found hobby and I am eagerly learning this new language. \r\n                I am from South Africa, living in a very small town called Glencoe. \r\n                </p>\r\n                <p className=\"lh-copy mw7 f4\">\r\n                I have been studying coding for the past two years, and I am eager to help you find \r\n                your web solution. My Frontend skills all include HTML5, CSS3, Javascript and Reactjs. \r\n                If there is a need for a different language, I will step up to the challange.\r\n            </p>\r\n          </article>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport './App.css';\r\nimport 'tachyons';\r\n\r\nconst Contact =() => {\r\n  return (\r\n    <div id=\"Contact\" className=\"parallax\" >\r\n      <h1 className=\"contact-heading1 f1\">Contact</h1>\r\n        <form className=\"pa4 gform db w-100 measure2 form\" method=\"POST\" data-email=\"example@email.net\" \r\n        action=\"https://script.google.com/macros/s/AKfycbwB7wV0PKkPZU5LvtBmzReqYBk-HTxwt_nlvdI5KRkHiTGcKpU/exec\">\r\n          <div>\r\n            <label htmlFor=\"comment\" className=\"f4 db mb2\">Comments</label>\r\n            <textarea id=\"comment\" name=\"comment\" className=\"db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2\" aria-describedby=\"comment-desc\"></textarea>\r\n          </div>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw4 lh-copy f4\" htmlFor=\"email-address\">Email address</label>\r\n            <input className=\"pa2 input-reset ba bg-white w-100 measure br2 mb2\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n           \r\n            <div className=\"thankyou_message\">\r\n \r\n              <h2>Thanks for contacting me! I will get back to you soon!\r\n              </h2>\r\n            </div>\r\n              <div className=\"mt3\">\r\n                <input className=\"b ph3 pv2 input-reset ba b--black grow pointer bg-white f4 br2\" type=\"submit\" value=\"Send\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"SocialMedia pa5 \">\r\n      \r\n      <a href=\"https://twitter.com/Chantelle710\">\r\n        <img src=\"https://img.icons8.com/cotton/64/000000/twitter.png\" alt=\"twitter-link\" className=\"grow\" />\r\n      </a>\r\n      \r\n      <a href=\"https://github.com/chantelletjie\">\r\n        <img src=\"https://img.icons8.com/nolan/64/github.png\" alt=\"github-link\" className=\"grow\" />\r\n      </a>\r\n      \r\n      </div>\r\n\r\n    </div>\r\n\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './App.css';\r\nimport 'tachyons';\r\n\r\nconst Footer =() => {\r\n    return (\r\n\r\n        <footer className=\"pv1\">\r\n            <small className=\"f6 db tc\">Â© 2020 <b>Website made by Chantelle Landman</b>. All Rights Reserved</small>\r\n        </footer>\r\n\r\n    )\r\n};\r\n\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport 'tachyons';\nimport Content from './Content';\nimport Contact from './Contact';\nimport Footer from './Footer';\n\n\nfunction App() {\n  return (\n   \n    <div >\n      \n    <div id=\"Main\" className=\"backgroundImage parallax\">\n\n      <div className=\"menuStyling\">\n       <a href=\"#Main\"> <h1 className=\"grow\"> Main</h1></a> \n       <a href=\"#Content\"> <h1 className=\"grow\"> About</h1></a> \n       <a href=\"#Contact\"> <h1 className=\"grow\"> Contact</h1></a> \n      </div>\n\n      <div className=\"wrapStyling f4 f3-m f2-l black-90 mv3\">\n        <h1>Freelancer For Hire</h1>\n      </div>\n    </div>\n    \n    <Content />\n    <Contact />\n    <Footer />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<App />,\n\ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}